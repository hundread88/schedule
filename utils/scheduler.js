import fs from 'fs';
import { DateTime } from 'luxon';

// –≠—Ç–æ—Ç Set –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
// –§–æ—Ä–º–∞—Ç –∫–ª—é—á–∞: "–≤—Ä–µ–º—è-–¥–µ–Ω—å_–Ω–µ–¥–µ–ª–∏-id_—á–∞—Ç–∞" (e.g., "13:00-sunday-123456789")
// –í–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç–æ—Ç Set –æ—á–∏—â–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞!
const sentNotifications = new Set();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ Set –≤ –Ω–∞—á–∞–ª–µ –Ω–æ–≤–æ–≥–æ –¥–Ω—è, —á—Ç–æ–±—ã –æ–Ω –Ω–µ —Ä–æ—Å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ.
function scheduleDailyCleanup() {
  const now = DateTime.now().setZone('Asia/Tbilisi');
  const tomorrow = now.plus({ days: 1 }).startOf('day');
  const msUntilTomorrow = tomorrow.diff(now).toMillis();

  setTimeout(() => {
    console.log('Performing daily cleanup of sent notifications cache.');
    sentNotifications.clear();
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
    scheduleDailyCleanup();
  }, msUntilTomorrow);
}


export function startScheduler(bot, getChatIds) {
  console.log('Global scheduler has been started.');

  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É.
  setInterval(() => {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ.
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º 'Asia/Tbilisi' –∫–∞–∫ –ø—Ä–∏–º–µ—Ä –¥–ª—è GMT+4. –í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å 'Asia/Dubai'.
    const now = DateTime.now().setZone('Asia/Tbilisi');
    const today = now.toFormat('cccc').toLowerCase(); // e.g., 'sunday'
    const currentTime = now.toFormat('HH:mm'); // e.g., '13:00'

    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ ID —á–∞—Ç–æ–≤
    const chatIds = getChatIds();
    if (chatIds.size === 0) {
      // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ—Ç —Å–º—ã—Å–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–ª—å—à–µ
      return;
    }

    const schedule = JSON.parse(fs.readFileSync('./schedule.json', 'utf-8'));
    const tasks = schedule[today] || [];

    for (const task of tasks) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—É–ø–∏–ª–æ –ª–∏ –≤—Ä–µ–º—è –∑–∞–¥–∞—á–∏
      if (task.time === currentTime) {
        
        // –†–∞—Å—Å—ã–ª–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        for (const chatId of chatIds) {
          const notificationKey = `${task.time}-${today}-${chatId}`;

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ –º—ã —ç—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
          if (!sentNotifications.has(notificationKey)) {
            const message = `üîî **–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:**\n${task.time} ‚Äî ${task.task}`;
            bot.sendMessage(chatId, message, { parse_mode: 'Markdown' })
              .then(() => console.log(`Sent notification for ${task.time} to ${chatId}`))
              .catch(err => console.error(`Failed to send message to ${chatId}:`, err.response.body.description));

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ Set, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
            sentNotifications.add(notificationKey);
          }
        }
      }
    }
  }, 60 * 1000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É

  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—É—é –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  scheduleDailyCleanup();
}
